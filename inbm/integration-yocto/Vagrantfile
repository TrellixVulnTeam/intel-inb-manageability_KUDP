# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  config.ssh.username = 'root'
  config.ssh.password = ''
  config.ssh.insert_key = 'true'
  config.ssh.extra_args = ["-o", "ServerAliveInterval=2", "-o", "ServerAliveCountMax=5"]


  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "yocto-qemu-integration"


#  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.provider :libvirt do |domain|
      domain.memory = 4196
      domain.cpus = 2
  end

  # inject Intel proxy settings
  if Vagrant.has_plugin?("vagrant-proxyconf")
    config.proxy.http     = "http://proxy-dmz.intel.com:911/"
    config.proxy.https    = "http://proxy-dmz.intel.com:912/"
    config.proxy.no_proxy = "intel.com,10.0.0.0/8,192.168.0.0/16,localhost,.local,127.0.0.0/8,134.134.0.0/16,ci_nginx"
  end

  
  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder './nginx-data', '/vagrant/nginx-data', id: 'nginx-data', type: 'rsync'
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder './test', '/test', id: 'test', type: 'rsync'
  # config.vm.synced_folder './scripts', '/scripts', id: 'scripts', type: 'rsync'

  config.vm.provision "shell", inline: <<-SHELL
    set -e
    set -x    
    export http_proxy=http://proxy-dmz.intel.com:911/
    export https_proxy=http://proxy-dmz.intel.com:912/
    echo "http_proxy=http://proxy-dmz.intel.com:911/" >>/etc/environment
    echo "HTTP_PROXY=http://proxy-dmz.intel.com:911/" >>/etc/environment
    echo "https_proxy=http://proxy-dmz.intel.com:912/" >>/etc/environment
    echo "HTTPS_proxy=http://proxy-dmz.intel.com:912/" >>/etc/environment
    echo "no_proxy=intel.com,ci_nginx,127.0.0.1,localhost" >>/etc/environment
    echo "NO_PROXY=intel.com,ci_nginx,127.0.0.1,localhost" >>/etc/environment

    mkdir /var/log/journal
    mkdir /var/log/sota_test
    systemd-tmpfiles --create --prefix /var/log/journal
    systemctl restart systemd-journald
    pip install --upgrade pip
    hash -r pip

    pip install cryptography # For create_signature.py
    # cp /scripts/iotg_inb_developer.conf /etc/intel_manageability.conf

  SHELL
#  config.vm.provision "file", source: "./scripts/dmidecode",
#    destination: "/tmp/dmidecode"
#  config.vm.provision "shell", inline: "cp /tmp/dmidecode /usr/sbin"
#  config.vm.provision "file", source: "./scripts/afulnx_64",
#    destination: "/tmp/afulnx_64"
#  config.vm.provision "shell", inline: "cp /tmp/afulnx_64 /opt/afulnx"

  #setting up files for nginx-content
#  config.vm.provision "file", source: "./nginx/nginx.conf", 
#	  destination: "/tmp/nginx.conf"
#  config.vm.provision "shell", inline: <<-SHELL
#    sudo cp /tmp/nginx.conf /etc/nginx/nginx.conf
#    nginx -s reload
#    sed -i "3i 127.0.1.1       ci_nginx" /etc/hosts
#  SHELL


  # following line is a workaround for a Vagrant bug (run never not working)
#  if ARGV.include? '--provision-with'

#  end
end
